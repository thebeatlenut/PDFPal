pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'pdf-pal-backend'
        DOCKER_REGISTRY = 'nikitarkmantri'
        DOCKER_TAG = 'latest'
        RENDER_SERVICE_NAME = 'pdf-pal-backend'
        RENDER_API_KEY = credentials('render-api-key')  // Replace with your Jenkins secret ID for Render API key
    }

    stages {
        stage('Clone Backend Repository') {
            steps {
                sh 'git clone --filter=blob:none --no-checkout https://github.com/thebeatlenut/PDFPal.git'
                sh 'cd PDFPal && git sparse-checkout set pdf-pal-backend'  // Set sparse-checkout to only get the backend directory
            }
        }


        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t $DOCKER_REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    sh 'docker login -u $DOCKER_REGISTRY -p $DOCKER_PASSWORD'

                    // Push the Docker image to Docker Hub
                    sh 'docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:$DOCKER_TAG'
                }
            }
        }

        stage('Trigger Render Deployment') {
            steps {
                script {
                    // Trigger Render deployment using Render API
                    sh """
                    curl -X POST https://api.render.com/v1/services/$RENDER_SERVICE_NAME/deployments \
                    -H 'Authorization: Bearer $RENDER_API_KEY' \
                    -H 'Content-Type: application/json' \
                    -d '{"branch": "main"}'
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
